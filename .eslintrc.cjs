module.exports = {
  env: {
    browser: true,
    es6: true,
    jest: true,
    node: true,
  },
  overrides: [
    {
      // disable sort-keys in xstate machine style to make the state machine object more readable
      files: '**/*Machine.ts',
      rules: {
        'sort-keys/sort-keys-fix': ['off'],
      },
    },
  ],
  parserOptions: {
    ecmaVersion: 2021,
    sourceType: "module",
  },
  root: true,
  rules: {
    'accessor-pairs': [
      'error', {
        getWithoutSet: true,
      },
    ],
    'array-bracket-newline': 'error',
    'array-bracket-spacing': 'error',
    'array-callback-return': 'error',
    'array-element-newline': [
      'error', {
        ArrayExpression: 'consistent',
        ArrayPattern: {
          minItems: 3,
        },
      },
    ],
    'arrow-body-style': 'error',
    'arrow-parens': 'error',
    'arrow-spacing': 'error',
    'block-scoped-var': 'error',
    'block-spacing': 'error',
    camelcase: [
      'error', {
        properties: 'never',
      },
    ],
    'class-methods-use-this': 'error',
    'comma-style': 'error',
    complexity: ['error', 8],
    'computed-property-spacing': 'error',
    'consistent-return': 'error',
    'consistent-this': 'error',
    'constructor-super': 'error',
    curly: ['error', 'multi', 'consistent'],
    'default-case': 'error',
    'default-case-last': 'error',
    'default-param-last': 'error',
    'dot-location': ['error', 'property'],
    'eol-last': 'error',
    eqeqeq: ['error', 'always'],
    'for-direction': 'error',
    'func-name-matching': 'error',
    'func-names': 'error',
    'func-style': 'error',
    'function-call-argument-newline': ['error', 'never'],
    'function-paren-newline': 'error',
    'generator-star-spacing': 'error',
    'getter-return': 'error',
    'grouped-accessor-pairs': 'error',
    'guard-for-in': 'error',
    'id-denylist': 'error',
    'id-match': 'error',
    'implicit-arrow-linebreak': 'error',
    indent: ['error', 2, { ObjectExpression: 1, SwitchCase: 1 }],
    'keyword-spacing': 'error',
    'line-comment-position': 'error',
    'linebreak-style': 'error',
    'lines-around-comment': [
      'error', {
        beforeBlockComment: false,
      },
    ],
    'lines-between-class-members': 'error',
    'max-classes-per-file': ['error', 1],
    'max-depth': 'error',
    'max-len': ['error', { code: 120, ignoreRegExpLiterals: true, ignoreUrls: true }],
    'max-lines': ['error', 1000],
    'max-lines-per-function': ['error', 1000],
    'max-nested-callbacks': 'error',
    'max-params': ['error', 5],
    'max-statements': ['error', 25],
    'max-statements-per-line': 'error',
    'multiline-comment-style': ['error', 'separate-lines'],
    'multiline-ternary': 'error',
    'new-cap': 'error',
    'new-parens': 'error',
    'newline-per-chained-call': 'error',
    'no-alert': 'error',
    'no-async-promise-executor': 'error',
    'no-await-in-loop': 'error',
    'no-bitwise': 'error',
    'no-caller': 'error',
    'no-case-declarations': 'error',
    'no-class-assign': 'error',
    'no-compare-neg-zero': 'error',
    'no-cond-assign': 'error',
    'no-confusing-arrow': 'error',
    'no-console': [
      'error', {
        allow: ['warn', 'error', 'info'],
      },
    ],
    'no-const-assign': 'error',
    'no-constant-condition': 'error',
    'no-constructor-return': 'error',
    'no-continue': 'error',
    'no-control-regex': 'error',
    'no-debugger': 'error',
    'no-delete-var': 'error',
    'no-div-regex': 'error',
    'no-dupe-args': 'error',
    'no-dupe-class-members': 'error',
    'no-dupe-else-if': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-duplicate-imports': 'error',
    'no-else-return': [
      'error', {
        allowElseIf: false,
      },
    ],
    'no-empty': 'error',
    'no-empty-character-class': 'error',
    'no-empty-pattern': 'error',
    'no-eq-null': 'error',
    'no-eval': 'error',
    'no-ex-assign': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-extra-boolean-cast': 'error',
    'no-extra-label': 'error',
    'no-fallthrough': 'error',
    'no-floating-decimal': 'error',
    'no-func-assign': 'error',
    'no-global-assign': 'error',
    'no-implicit-coercion': 'error',
    'no-implicit-globals': 'error',
    'no-import-assign': 'error',
    'no-inline-comments': ['error', { ignorePattern: 'webpack(ChunkName|Prefetch):\\s.+' }],
    'no-inner-declarations': 'error',
    'no-invalid-regexp': 'error',
    'no-irregular-whitespace': 'error',
    'no-iterator': 'error',
    'no-label-var': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-lonely-if': 'error',
    'no-misleading-character-class': 'error',
    'no-mixed-operators': 'error',
    'no-mixed-spaces-and-tabs': 'error',
    'no-multi-assign': 'error',
    'no-multi-spaces': 'error',
    'no-multi-str': 'error',
    'no-multiple-empty-lines': ['error', { max: 1, maxBOF: 0, maxEOF: 0 }],
    'no-negated-condition': 'error',
    'no-nested-ternary': 'error',
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-object': 'error',
    'no-new-symbol': 'error',
    'no-new-wrappers': 'error',
    'no-nonoctal-decimal-escape': 'error',
    'no-obj-calls': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    'no-param-reassign': 'error',
    'no-plusplus': [
      'error', {
        allowForLoopAfterthoughts: true,
      },
    ],
    'no-promise-executor-return': 'error',
    'no-proto': 'error',
    'no-prototype-builtins': 'error',
    'no-regex-spaces': 'error',
    'no-restricted-exports': 'error',
    'no-restricted-globals': 'error',
    'no-restricted-properties': 'error',
    'no-restricted-syntax': 'error',
    'no-return-assign': 'error',
    'no-return-await': 'error',
    'no-script-url': 'error',
    'no-self-assign': 'error',
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-setter-return': 'error',
    'no-shadow-restricted-names': 'error',
    'no-spaced-func': 'error',
    'no-sparse-arrays': 'error',
    'no-tabs': 'error',
    'no-template-curly-in-string': 'error',
    'no-this-before-super': 'error',
    'no-trailing-spaces': 'error',
    'no-undef': 'error',
    'no-undef-init': 'error',
    'no-undefined': 'error',
    'no-underscore-dangle': 'off',
    'no-unexpected-multiline': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-unneeded-ternary': 'error',
    'no-unreachable': 'error',
    'no-unreachable-loop': 'error',
    'no-unsafe-finally': 'error',
    'no-unsafe-negation': 'error',
    'no-unsafe-optional-chaining': 'error',
    'no-unused-labels': 'error',
    'no-useless-backreference': 'error',
    'no-useless-call': 'error',
    'no-useless-catch': 'error',
    'no-useless-computed-key': 'error',
    'no-useless-concat': 'error',
    'no-useless-constructor': 'error',
    'no-useless-escape': 'error',
    'no-useless-rename': 'error',
    'no-useless-return': 'error',
    'no-var': 'error',
    'no-void': [
      'error', {
        allowAsStatement: true,
      },
    ],
    'no-warning-comments': 'error',
    'no-whitespace-before-property': 'error',
    'no-with': 'error',
    'nonblock-statement-body-position': 'error',
    'object-curly-newline': ['error', { consistent: true, minProperties: 6 }],
    'object-curly-spacing': ['error', 'always'],
    'object-property-newline': ['error', { allowAllPropertiesOnSameLine: true }],
    'object-shorthand': 'error',
    'one-var': ['error', 'never'],
    'one-var-declaration-per-line': 'error',
    'operator-assignment': 'error',
    'operator-linebreak': ['error', 'before'],
    'padded-blocks': ['error', 'never'],
    'prefer-arrow-callback': 'error',
    'prefer-const': 'error',
    'prefer-destructuring': ['error', { AssignmentExpression: { array: false } }],
    'prefer-exponentiation-operator': 'error',
    'prefer-named-capture-group': 'error',
    'prefer-numeric-literals': 'error',
    'prefer-object-spread': 'error',
    'prefer-promise-reject-errors': 'error',
    'prefer-regex-literals': 'error',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'quote-props': ['error', 'as-needed'],
    quotes: [
      'error', 'single', {
        allowTemplateLiterals: true,
        avoidEscape: true,
      },
    ],
    radix: 'error',
    'require-atomic-updates': 'error',
    'require-unicode-regexp': 'error',
    'require-yield': 'error',
    'rest-spread-spacing': 'error',
    semi: ['error', 'never'],
    'semi-spacing': 'error',
    'semi-style': 'error',
    'sort-vars': 'error',
    'space-before-blocks': 'error',
    'space-in-parens': ['error', 'never'],
    'space-unary-ops': 'error',
    'spaced-comment': 'error',
    strict: 'error',
    'switch-colon-spacing': 'error',
    'symbol-description': 'error',
    'template-curly-spacing': 'error',
    'template-tag-spacing': 'error',
    'unicode-bom': 'error',
    'use-isnan': 'error',
    'valid-typeof': 'error',
    'vars-on-top': 'error',
    'wrap-iife': 'error',
    'wrap-regex': 'error',
    'yield-star-spacing': 'error',
    yoda: 'error',
  },
  settings: {
    lintAllEsApis: true,
    // navigator.clipboard isn't polyfilled for Safari:
    // - It's ONLY used in admin and should not be used outside of it, so no issue
    // document.body isn't polyfilled and for Firefox doesn't need to:
    // - This is caused by Firefox not supporting a very specific usecase until recently
    // - We probably won't encounter this, if we do, we need to bump the minimal version to 60
    polyfills: ['navigator.clipboard', 'document.body', 'IntersectionObserver'],
    // Configure preact i18n translation settings
    'preact-i18n': {
      ignoreFiles: '**/*.+(spec|stories).tsx',
      languageFiles: [
        {
          name: 'de',
          path: 'src/i18n/de.json',
        },
        {
          name: 'en',
          path: 'src/i18n/en.json',
        },
        {
          name: 'es',
          path: 'src/i18n/es.json',
        },
        {
          name: 'fr',
          path: 'src/i18n/fr.json',
        },
        {
          name: 'it',
          path: 'src/i18n/it.json',
        },
        {
          name: 'nl',
          path: 'src/i18n/nl.json',
        },
      ],
    },
    // Add support for 'h' in react files
    react: {
      pragma: 'h',
      version: '16.0',
    },
  },
}
